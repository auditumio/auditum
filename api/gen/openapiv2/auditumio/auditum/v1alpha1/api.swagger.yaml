swagger: "2.0"
info:
  title: Auditum API
  description: |-
    This is the specification for Auditum HTTP API.

    For gRPC API, see [repository](https://github.com/infragmo/auditum/tree/main/api/proto/auditumio/auditum/v1alpha1).

    For more information, see [Usage Guide](/docs/usage-guide/).

    For any issues and feature requests, please use [GitHub Issue Tracker](https://github.com/infragmo/auditum/issues)
  version: v1alpha1
tags:
  - name: Projects
    description: |-
      **Project** is the top-level resource in *Auditum*. **Projects** contain all other resources like **Records**.

      A project is a logical grouping of records. Typically, a project is created for each of the applications that is being audited.
    externalDocs:
      description: 'Usage Guide :: Create Project'
      url: /docs/usage-guide/create-project
  - name: Records
    description: '**Record** is the core resource in *Auditum*. **Records** represent audit trail records a.k.a. audit logs.'
    externalDocs:
      description: 'Usage Guide :: Create Records'
      url: /docs/usage-guide/create-records
basePath: /api/v1alpha1
consumes:
  - application/json
produces:
  - application/json
  - application/json+pretty
paths:
  /projects:
    get:
      summary: List projects
      description: Returns a list of projects by the provided criteria.
      operationId: ListProjects
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.ListProjectsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: |-
            The maximum number of projects to return. The service may return fewer than
            this value.
            If unspecified, at most 10 projects will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListProjects` call.
            Provide this to retrieve the subsequent page.

            When paginating, all other parameters provided to `ListProjects` must match
            the call that provided the page token.
          in: query
          required: false
          type: string
      tags:
        - Projects
    post:
      summary: Create project
      description: Creates a new project.
      operationId: CreateProject
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.CreateProjectResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.CreateProjectRequest'
      tags:
        - Projects
  /projects/{project_id}:
    get:
      summary: Get project
      description: Returns a project by its id.
      operationId: GetProject
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.GetProjectResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: ID of the record to get.
          in: path
          required: true
          type: string
      tags:
        - Projects
    patch:
      summary: Update project
      description: Updates an existing project.
      operationId: UpdateProject
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.UpdateProjectResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: Internal project identifier.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              project:
                type: object
                properties:
                  create_time:
                    type: string
                    format: date-time
                    description: Time when the project was created.
                    readOnly: true
                  display_name:
                    type: string
                    description: |-
                      Display name of the project.

                      REQUIREMENTS.
                      The value must be 3-64 characters long.
                  update_record_enabled:
                    type: boolean
                    description: |-
                      Whether to allow updating records for this project.
                      If set, overrides the global setting.
                      Defaults to unset.
                  delete_record_enabled:
                    type: boolean
                    description: |-
                      Whether to allow deleting records for this project.
                      If set, overrides the global setting.
                      Defaults to unset.
                description: Project to update.
                title: Project to update.
              update_mask:
                type: string
                description: |-
                  Field mask indicating a list of fields to update.
                  Currently supported fields:
                  - `display_name`
                  - `update_record_enabled`
                  - `delete_record_enabled`
                  Support for other fields may be added in the future.
            required:
              - display_name
              - update_mask
      tags:
        - Projects
  /projects/{project_id}/records:
    get:
      summary: List records
      description: Returns a list of records by the provided criteria.
      operationId: ListRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.ListRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: ID of the project that owns the records.
          in: path
          required: true
          type: string
        - name: filter.labels[string]
          description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          required: false
          type: string
        - name: filter.resource_type
          description: Return records with the provided resource type.
          in: query
          required: false
          type: string
        - name: filter.resource_id
          description: Return records with the provided resource ID.
          in: query
          required: false
          type: string
        - name: filter.operation_type
          description: Return records with the provided operation type.
          in: query
          required: false
          type: string
        - name: filter.operation_id
          description: Return records with the provided operation ID.
          in: query
          required: false
          type: string
        - name: filter.operation_time_from
          description: Return records with operation time starting from the provided time, inclusive.
          in: query
          required: false
          type: string
          format: date-time
        - name: filter.operation_time_to
          description: Return records with operation time up to the provided time, exclusive.
          in: query
          required: false
          type: string
          format: date-time
        - name: filter.actor_type
          description: Return records with the provided actor type.
          in: query
          required: false
          type: string
        - name: filter.actor_id
          description: Return records with the provided actor ID.
          in: query
          required: false
          type: string
        - name: page_size
          description: |-
            The maximum number of records to return. The service may return fewer than
            this value.
            If unspecified, at most 10 records will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListRecords` call.
            Provide this to retrieve the subsequent page.

            When paginating, all other parameters provided to `ListRecords` must match
            the call that provided the page token.
          in: query
          required: false
          type: string
      tags:
        - Records
      externalDocs:
        description: 'Usage Guide :: Search Records'
        url: /docs/usage-guide/search-records
    post:
      summary: Create record
      description: Creates a new audit record.
      operationId: CreateRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.CreateRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: Identifier of the project the record belongs to.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              record:
                type: object
                properties:
                  id:
                    type: string
                    description: Internal record identifier.
                    readOnly: true
                  create_time:
                    type: string
                    format: date-time
                    description: Time when the record was created.
                    readOnly: true
                  labels:
                    type: object
                    additionalProperties:
                      type: string
                    description: |-
                      Labels for the record that can be used for filtering.
                      The labels are indexed, unlike metadata fields, which means it is possible
                      to find records by their labels.

                      REQUIREMENTS.
                      Mandatory:
                      Keys must conform to the following regexp: [a-zA-Z0-9-_]+.
                      Keys must be at least 1 byte in length.
                      Configurable defaults:
                      Keys must be at most 64 bytes in length.
                      Values must be at most 256 bytes in length.
                      The total size of all keys and values must be at most 2048 bytes.

                      EXAMPLE.
                      In an example social website domain, records for both POST and COMMENT
                      resources can be created with "post_id" label. This way all records related to the
                      post and its comments can be retrieved in chronological order with one
                      request by filtering with "post_id" label.

                      BEST PRACTICE.
                      - Add only labels that are critical for chronological retrieval of
                        records related to multiple resources.
                      - Do not add labels for standard fields (such as resource type) as they
                        are already available for filtering.
                  resource:
                    $ref: '#/definitions/auditumio.auditum.v1alpha1.Resource'
                    description: Record resource.
                  operation:
                    $ref: '#/definitions/auditumio.auditum.v1alpha1.Operation'
                    description: Record operation.
                  actor:
                    $ref: '#/definitions/auditumio.auditum.v1alpha1.Actor'
                    description: Record actor.
                description: Record to create.
                title: Record to create.
            required:
              - resource
              - operation
              - actor
      tags:
        - Records
  /projects/{project_id}/records/{record_id}:
    get:
      summary: Get record
      description: Returns a record by its id.
      operationId: GetRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.GetRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: ID of the project that owns the record.
          in: path
          required: true
          type: string
        - name: record_id
          description: ID of the record to retrieve.
          in: path
          required: true
          type: string
      tags:
        - Records
    delete:
      summary: Delete record
      description: |-
        Deletes an existing project.

        ⚠️ NOTE: this operation is disabled by default and may be enabled per project or globally.
      operationId: DeleteRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.DeleteRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: ID of the project that owns the record.
          in: path
          required: true
          type: string
        - name: record_id
          description: ID of the record to delete.
          in: path
          required: true
          type: string
      tags:
        - Records
      externalDocs:
        description: 'Usage Guide :: Delete Records'
        url: /docs/usage-guide/delete-records
    patch:
      summary: Update record
      description: |-
        Updates an existing project.

        ⚠️ NOTE: this operation is disabled by default and may be enabled per project or globally.
      operationId: UpdateRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.UpdateRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: Identifier of the project the record belongs to.
          in: path
          required: true
          type: string
        - name: record_id
          description: Internal record identifier.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              record:
                type: object
                properties:
                  create_time:
                    type: string
                    format: date-time
                    description: Time when the record was created.
                    readOnly: true
                  labels:
                    type: object
                    additionalProperties:
                      type: string
                    description: |-
                      Labels for the record that can be used for filtering.
                      The labels are indexed, unlike metadata fields, which means it is possible
                      to find records by their labels.

                      REQUIREMENTS.
                      Mandatory:
                      Keys must conform to the following regexp: [a-zA-Z0-9-_]+.
                      Keys must be at least 1 byte in length.
                      Configurable defaults:
                      Keys must be at most 64 bytes in length.
                      Values must be at most 256 bytes in length.
                      The total size of all keys and values must be at most 2048 bytes.

                      EXAMPLE.
                      In an example social website domain, records for both POST and COMMENT
                      resources can be created with "post_id" label. This way all records related to the
                      post and its comments can be retrieved in chronological order with one
                      request by filtering with "post_id" label.

                      BEST PRACTICE.
                      - Add only labels that are critical for chronological retrieval of
                        records related to multiple resources.
                      - Do not add labels for standard fields (such as resource type) as they
                        are already available for filtering.
                  resource:
                    $ref: '#/definitions/auditumio.auditum.v1alpha1.Resource'
                    description: Record resource.
                  operation:
                    $ref: '#/definitions/auditumio.auditum.v1alpha1.Operation'
                    description: Record operation.
                  actor:
                    $ref: '#/definitions/auditumio.auditum.v1alpha1.Actor'
                    description: Record actor.
                description: Record to update.
                title: Record to update.
              update_mask:
                type: string
                description: |-
                  Field mask indicating a list of fields to update.
                  Currently supported fields:
                  - `labels`
                  - `resource`
                  - `operation`
                  - `actor`
                  Support for other fields may be added in the future.
            required:
              - resource
              - operation
              - actor
              - update_mask
      tags:
        - Records
      externalDocs:
        description: 'Usage Guide :: Update Records'
        url: /docs/usage-guide/update-records
  /projects/{project_id}/records:batchCreate:
    post:
      summary: Batch create records
      description: Creates multiple audit records in a batch.
      operationId: BatchCreateRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auditumio.auditum.v1alpha1.BatchCreateRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: project_id
          description: ID of the project to create records in.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              records:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/auditumio.auditum.v1alpha1.Record'
                description: |-
                  Records to create.
                  Maximum number of records in a batch is 100.
                maxItems: 100
            required:
              - records
      tags:
        - Records
definitions:
  auditumio.auditum.v1alpha1.Actor:
    type: object
    properties:
      type:
        type: string
        description: |-
          Type of the actor.
          This field may be used to distinguish different kinds of actors from
          each other.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 256 bytes in length.

          EXAMPLE.
          In an example social website domain, the following actor types can be used:
          - USER for a person that updates the post;
          - SERVICE_ACCOUNT for a system that automatically archives posts when
            they become outdated.
      id:
        type: string
        description: |-
          Domain/application specific identifier of the actor.
          This field uniquely identifies the actor who triggered the operation.
          The id must be unique within a `type`.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 256 bytes in length.

          BEST PRACTICE.
          - The id may refer to a user (staff, customer, etc) or to a system
            (service account, etc), depending on the context of the operation.
          - This field is required. If, for any reason, there is a case when it is
            impossible or not desirable to provide actor identity, use a consistent
            stub value like "unknown".
      metadata:
        type: object
        additionalProperties:
          type: string
        description: |-
          Custom properties related to the actor.

          REQUIREMENTS.
          Mandatory:
          Keys must conform to the following regexp: [a-zA-Z0-9-_]+.
          Keys must be at least 1 byte in length.
          Configurable defaults:
          Keys must be at most 64 bytes in length.
          Values must be at most 256 bytes in length.
          The total size of all keys and values must be at most 2048 bytes.
    description: Represents the audit record actor.
    required:
      - type
      - id
  auditumio.auditum.v1alpha1.BatchCreateRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/auditumio.auditum.v1alpha1.Record'
        description: Created records.
  auditumio.auditum.v1alpha1.CreateProjectRequest:
    type: object
    properties:
      project:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Project'
        description: Project to create.
    required:
      - project
  auditumio.auditum.v1alpha1.CreateProjectResponse:
    type: object
    properties:
      project:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Project'
        description: Created project.
  auditumio.auditum.v1alpha1.CreateRecordResponse:
    type: object
    properties:
      record:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Record'
        description: Created record.
  auditumio.auditum.v1alpha1.DeleteRecordResponse:
    type: object
    description: No response data.
  auditumio.auditum.v1alpha1.GetProjectResponse:
    type: object
    properties:
      project:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Project'
        description: Found project.
  auditumio.auditum.v1alpha1.GetRecordResponse:
    type: object
    properties:
      record:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Record'
        description: Found record.
  auditumio.auditum.v1alpha1.ListProjectsRequest.Filter:
    type: object
    description: Describes a filter to apply to the list of projects.
  auditumio.auditum.v1alpha1.ListProjectsResponse:
    type: object
    properties:
      projects:
        type: array
        items:
          type: object
          $ref: '#/definitions/auditumio.auditum.v1alpha1.Project'
        description: Found projects.
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page.
          If this field is empty, there are no subsequent pages.
  auditumio.auditum.v1alpha1.ListRecordsRequest.Filter:
    type: object
    properties:
      labels[string]:
        type: object
        additionalProperties:
          type: string
        description: |-
          Return records with the provided labels.
          This filter works as "has" semantic: all provided labels must be present
          in the record, but returned records may have other labels.
      resource_type:
        type: string
        description: Return records with the provided resource type.
      resource_id:
        type: string
        description: Return records with the provided resource ID.
      operation_type:
        type: string
        description: Return records with the provided operation type.
      operation_id:
        type: string
        description: Return records with the provided operation ID.
      operation_time_from:
        type: string
        format: date-time
        description: Return records with operation time starting from the provided time, inclusive.
      operation_time_to:
        type: string
        format: date-time
        description: Return records with operation time up to the provided time, exclusive.
      actor_type:
        type: string
        description: Return records with the provided actor type.
      actor_id:
        type: string
        description: Return records with the provided actor ID.
    description: Describes a filter to apply to the list of records.
  auditumio.auditum.v1alpha1.ListRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/auditumio.auditum.v1alpha1.Record'
        description: Found records.
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page.
          If this field is empty, there are no subsequent pages.
  auditumio.auditum.v1alpha1.Operation:
    type: object
    properties:
      type:
        type: string
        description: |-
          Type of the operation.
          This field may be used to categorize operations / actions / events.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 256 bytes in length.

          EXAMPLE.
          In an example social website domain, the following operation types can be
          used:
          - CREATE when the post or comment is created;
          - UPDATE when the post or comment post is updated;
          - DELETE when the post or comment post is deleted.

          BEST PRACTICE.
          - Use `type` for high-level categorization and `id` for identification.
            For example, there can be multiple ways to create the resource: a user
            can create a resource from an app, an administrator can create a resource
            from the back office, a batch of resources can be created from the API -
            all of these operations can be of type CREATE.
      id:
        type: string
        description: |-
          Domain/application specific identifier of the operation.
          This field identifies the operation that is audited.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 512 bytes in length.

          EXAMPLE.
          A few examples on how the operation for creating a post comment can be
          identified:
          - Simple identifier like "CreateComment"
          - Event name, e.g. "CommentCreated"
          - API operation for HTTP, e.g. "POST /posts/101/comments"
          - API operation for gRPC, e.g. "example.v1.PostService/CreateComment"
          - Serverless function name
          - etc.

          BEST PRACTICE.
          - There might be different approaches to identifying operations, see EXAMPLE
            for ideas and suggestions. It is recommended to keep it consistent.
          - Remember that `type` field can be used for high-level categorization, so
            it is possible to have different operations with the same type. See `type`
            field description.
      time:
        type: string
        format: date-time
        description: Time when the operation occurred.
      metadata:
        type: object
        additionalProperties:
          type: string
        description: |-
          Custom properties related to the operation.

          REQUIREMENTS.
          Mandatory:
          Keys must conform to the following regexp: [a-zA-Z0-9-_]+.
          Keys must be at least 1 byte in length.
          Configurable defaults:
          Keys must be at most 64 bytes in length.
          Values must be at most 256 bytes in length.
          The total size of all keys and values must be at most 2048 bytes.
      trace_context:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.TraceContext'
        description: Trace context related to the operation.
      status:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.OperationStatus.Enum'
        description: |-
          Status of the operation to distinguish whether it succeeded or failed.

          BEST PRACTICE.
          - Depending on your use case, it may be important not only to record
            completed operations, but failed attempts too. Use this field to
            distinguish the operation outcome.
    description: Represents the audit record operation.
    required:
      - type
      - id
      - time
  auditumio.auditum.v1alpha1.OperationStatus.Enum:
    type: string
    enum:
      - UNSPECIFIED
      - SUCCEEDED
      - FAILED
    default: UNSPECIFIED
    description: |-
      Enumerates available operation statuses.

       - UNSPECIFIED: Operation status not provided or unknown.
       - SUCCEEDED: Operation succeeded.
       - FAILED: Operation failed.
  auditumio.auditum.v1alpha1.Project:
    type: object
    properties:
      id:
        type: string
        description: Internal project identifier.
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: Time when the project was created.
        readOnly: true
      display_name:
        type: string
        description: |-
          Display name of the project.

          REQUIREMENTS.
          The value must be 3-64 characters long.
      update_record_enabled:
        type: boolean
        description: |-
          Whether to allow updating records for this project.
          If set, overrides the global setting.
          Defaults to unset.
      delete_record_enabled:
        type: boolean
        description: |-
          Whether to allow deleting records for this project.
          If set, overrides the global setting.
          Defaults to unset.
    description: Represents a project.
    required:
      - display_name
  auditumio.auditum.v1alpha1.Record:
    type: object
    properties:
      id:
        type: string
        description: Internal record identifier.
        readOnly: true
      project_id:
        type: string
        description: Identifier of the project the record belongs to.
      create_time:
        type: string
        format: date-time
        description: Time when the record was created.
        readOnly: true
      labels:
        type: object
        additionalProperties:
          type: string
        description: |-
          Labels for the record that can be used for filtering.
          The labels are indexed, unlike metadata fields, which means it is possible
          to find records by their labels.

          REQUIREMENTS.
          Mandatory:
          Keys must conform to the following regexp: [a-zA-Z0-9-_]+.
          Keys must be at least 1 byte in length.
          Configurable defaults:
          Keys must be at most 64 bytes in length.
          Values must be at most 256 bytes in length.
          The total size of all keys and values must be at most 2048 bytes.

          EXAMPLE.
          In an example social website domain, records for both POST and COMMENT
          resources can be created with "post_id" label. This way all records related to the
          post and its comments can be retrieved in chronological order with one
          request by filtering with "post_id" label.

          BEST PRACTICE.
          - Add only labels that are critical for chronological retrieval of
            records related to multiple resources.
          - Do not add labels for standard fields (such as resource type) as they
            are already available for filtering.
      resource:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Resource'
        description: Record resource.
      operation:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Operation'
        description: Record operation.
      actor:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Actor'
        description: Record actor.
    description: Represents an audit record.
    required:
      - project_id
      - resource
      - operation
      - actor
  auditumio.auditum.v1alpha1.Resource:
    type: object
    properties:
      type:
        type: string
        description: |-
          Type of the resource.
          This field may be used to distinguish different kinds of resources from
          each other.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 256 bytes in length.

          EXAMPLE.
          In an example social website domain, the following resource types can be
          used:
          - POST for content post;
          - COMMENT for comment to a post.

          BEST PRACTICE.
          - Match resource types according to your business domain model.
          - Keep the variety of resource types under control. This will make it
            easier to filter and analyze records.
      id:
        type: string
        description: |-
          Domain/application specific identifier of the resource.
          This field uniquely identifies the resource.
          The id must be unique within a `type`.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 256 bytes in length.

          EXAMPLE.
          In an example social website domain, the value can represent post id,
          comment id, etc.
          For singleton resources the name can be used as a resource identifier,
          e.g. "site_settings" for global site settings that you want to audit.
      metadata:
        type: object
        additionalProperties:
          type: string
        description: |-
          Custom properties related to the resource.

          REQUIREMENTS.
          Mandatory:
          Keys must conform to the following regexp: [a-zA-Z0-9-_]+.
          Keys must be at least 1 byte in length.
          Configurable defaults:
          Keys must be at most 64 bytes in length.
          Values must be at most 256 bytes in length.
          The total size of all keys and values must be at most 2048 bytes.
      changes:
        type: array
        items:
          type: object
          $ref: '#/definitions/auditumio.auditum.v1alpha1.ResourceChange'
        description: |-
          A list of changes for the resource.
          This can be used to provide context into what is actually changed.

          REQUIREMENTS.
          Configurable defaults:
          The number of changes must be at most 20 changes.

          BEST PRACTICE.
          - Add only changes that are critical for audit trail. Do not add the whole
            resource as a change, as it will bloat the audit log, making it harder to
            trace truly important changes. Instead, add only the fields that were
            actually changed.
          - There are two strategies for recording operation about resource creation:
            1) Do not add any changes about resource creation.
               If a particular resource attribute was never changed, the state of the
               resource itself already provides information about this attribute.
            2) Add a change about resource creation with all resource fields. For
               updates, still follow the rule of adding only changed fields.
    description: Represents the audit record resource.
    required:
      - type
      - id
  auditumio.auditum.v1alpha1.ResourceChange:
    type: object
    properties:
      name:
        type: string
        description: |-
          Name of the change.
          The name should answer the question "WHAT is changed?".
          This may be used to distinguish different kinds of resource fields in the
          set of changes.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 256 bytes in length.

          EXAMPLE.
          In an example social website domain, assuming we are recording post update
          where its title was changed, this field can be set to "title".
      description:
        type: string
        description: |-
          Change description.
          This provides human-readable description of this particular change.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 1024 bytes in length.
      old_value:
        description: |-
          Original value before the operation.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 4096 bytes in length.
      new_value:
        description: |-
          Changed value of after the operation.

          REQUIREMENTS.
          Configurable defaults:
          The value must be at most 4096 bytes in length.
    description: Represents the audit record resource change item.
    required:
      - name
  auditumio.auditum.v1alpha1.TraceContext:
    type: object
    properties:
      traceparent:
        type: string
        description: |-
          Traceparent Header value.

          REQUIREMENTS.
          Mandatory:
          Must be valid W3C traceparent header value.
          See: https://www.w3.org/TR/trace-context/#traceparent-header
      tracestate:
        type: string
        description: |-
          Tracestate Header value.

          REQUIREMENTS.
          Mandatory:
          Must be valid W3C tracestate header value.
          See: https://www.w3.org/TR/trace-context/#tracestate-header
          Maximum length of the tracestate is 512 bytes.
          Can be provided only if valid traceparent is provided as well.
    description: |-
      Represents the audit record operation trace context.

      Adheres to the W3C Trace Context specification.
      See: https://www.w3.org/TR/trace-context/
  auditumio.auditum.v1alpha1.UpdateProjectResponse:
    type: object
    properties:
      project:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Project'
        description: Updated project.
  auditumio.auditum.v1alpha1.UpdateRecordResponse:
    type: object
    properties:
      record:
        $ref: '#/definitions/auditumio.auditum.v1alpha1.Record'
        description: Updated record.
  google.protobuf.Any:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  google.protobuf.NullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  google.rpc.Status:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
